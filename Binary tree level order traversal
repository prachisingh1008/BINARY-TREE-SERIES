class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        vector<vector<int>>ans;
        if(root==NULL)
        return ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int size=q.size();
            vector<int>level;
            for(int i=0;i<size;i++)
            {
                TreeNode*node=q.front();
                q.pop();
                if(node->left!=NULL)
                q.push(node->left);
                 if(node->right!=NULL)
                q.push(node->right);
                level.push_back(node->val);
            }
            ans.push_back(level);
        }
        
        return ans;
    }
};


Given a binary tree, find its level order traversal.
Level order traversal of a tree is breadth-first traversal for the tree.


Example 1:

Input:
    1
  /   \ 
 3     2
Output:1 3 2
Example 2:

Input:
        10
     /      \
    20       30
  /   \
 40   60
Output:10 20 30 40 60
iss order me print kia hai
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]
